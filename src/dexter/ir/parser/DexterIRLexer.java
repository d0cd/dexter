// Generated from DexterIR.g4 by ANTLR 4.7.2

package dexter.ir.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DexterIRLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		COMMENT=39, LINE_COMMENT=40, WS=41, EQ=42, NEQ=43, AND=44, OR=45, NOT=46, 
		LT=47, LE=48, GT=49, GE=50, PLUS=51, MINUS=52, MULT=53, DIV=54, MOD=55, 
		SHL=56, LSHR=57, ASHR=58, BAND=59, BOR=60, BXOR=61, BNOT=62, BASETYPE=63, 
		MACRO=64, ID=65, NUMBER=66, FLOATNUM=67;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "COMMENT", "LINE_COMMENT", 
			"WS", "EQ", "NEQ", "AND", "OR", "NOT", "LT", "LE", "GT", "GE", "PLUS", 
			"MINUS", "MULT", "DIV", "MOD", "SHL", "LSHR", "ASHR", "BAND", "BOR", 
			"BXOR", "BNOT", "BASETYPE", "MACRO", "ID", "NUMBER", "INT", "FLOATNUM", 
			"FLOAT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "','", "')'", "':'", "'->'", "'class'", "'array'", "'tuple'", 
			"'list'", "'ptr'", "'bv'", "'for'", "'in'", "'true'", "'false'", "'empty'", 
			"'uninterp'", "'null'", "'concrete'", "'const'", "'['", "']'", "'incr'", 
			"'decr'", "'.'", "'@'", "'emit'", "'init'", "'scope'", "'lb'", "'ub'", 
			"'forall'", "'if'", "'then'", "'else'", "'-->'", "'let'", "'assume'", 
			null, null, null, "'='", "'!='", "'&&'", "'||'", "'!'", "'<'", "'<='", 
			"'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'>>>'", 
			"'&'", "'|'", "'^'", "'~'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "COMMENT", "LINE_COMMENT", "WS", "EQ", "NEQ", "AND", 
			"OR", "NOT", "LT", "LE", "GT", "GE", "PLUS", "MINUS", "MULT", "DIV", 
			"MOD", "SHL", "LSHR", "ASHR", "BAND", "BOR", "BXOR", "BNOT", "BASETYPE", 
			"MACRO", "ID", "NUMBER", "FLOATNUM"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DexterIRLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DexterIR.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2E\u01ea\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\3\2\3\2\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3"+
		"\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3"+
		"\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\7(\u013b\n(\f(\16(\u013e\13(\3(\3("+
		"\3(\3(\3(\3)\3)\3)\3)\7)\u0149\n)\f)\16)\u014c\13)\3)\5)\u014f\n)\3)\3"+
		")\3)\3)\3*\6*\u0156\n*\r*\16*\u0157\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3"+
		".\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64"+
		"\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3;\3<"+
		"\3<\3=\3=\3>\3>\3?\3?\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\3@\5@\u019b\n@"+
		"\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A"+
		"\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\5A"+
		"\u01ca\nA\3B\5B\u01cd\nB\3B\7B\u01d0\nB\fB\16B\u01d3\13B\3C\3C\3D\3D\3"+
		"D\7D\u01da\nD\fD\16D\u01dd\13D\5D\u01df\nD\3E\3E\3F\3F\3F\7F\u01e6\nF"+
		"\fF\16F\u01e9\13F\3\u013c\2G\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087"+
		"\2\u0089E\u008b\2\3\2\6\4\2\f\f\17\17\5\2\13\f\17\17\"\"\5\2C\\aac|\6"+
		"\2\62;C\\aac|\2\u01f6\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2"+
		"\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2"+
		"w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2"+
		"\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0089\3\2\2\2\3\u008d\3\2\2\2\5\u008f"+
		"\3\2\2\2\7\u0091\3\2\2\2\t\u0093\3\2\2\2\13\u0095\3\2\2\2\r\u0098\3\2"+
		"\2\2\17\u009e\3\2\2\2\21\u00a4\3\2\2\2\23\u00aa\3\2\2\2\25\u00af\3\2\2"+
		"\2\27\u00b3\3\2\2\2\31\u00b6\3\2\2\2\33\u00ba\3\2\2\2\35\u00bd\3\2\2\2"+
		"\37\u00c2\3\2\2\2!\u00c8\3\2\2\2#\u00ce\3\2\2\2%\u00d7\3\2\2\2\'\u00dc"+
		"\3\2\2\2)\u00e5\3\2\2\2+\u00eb\3\2\2\2-\u00ed\3\2\2\2/\u00ef\3\2\2\2\61"+
		"\u00f4\3\2\2\2\63\u00f9\3\2\2\2\65\u00fb\3\2\2\2\67\u00fd\3\2\2\29\u0102"+
		"\3\2\2\2;\u0107\3\2\2\2=\u010d\3\2\2\2?\u0110\3\2\2\2A\u0113\3\2\2\2C"+
		"\u011a\3\2\2\2E\u011d\3\2\2\2G\u0122\3\2\2\2I\u0127\3\2\2\2K\u012b\3\2"+
		"\2\2M\u012f\3\2\2\2O\u0136\3\2\2\2Q\u0144\3\2\2\2S\u0155\3\2\2\2U\u015b"+
		"\3\2\2\2W\u015d\3\2\2\2Y\u0160\3\2\2\2[\u0163\3\2\2\2]\u0166\3\2\2\2_"+
		"\u0168\3\2\2\2a\u016a\3\2\2\2c\u016d\3\2\2\2e\u016f\3\2\2\2g\u0172\3\2"+
		"\2\2i\u0174\3\2\2\2k\u0176\3\2\2\2m\u0178\3\2\2\2o\u017a\3\2\2\2q\u017c"+
		"\3\2\2\2s\u017f\3\2\2\2u\u0182\3\2\2\2w\u0186\3\2\2\2y\u0188\3\2\2\2{"+
		"\u018a\3\2\2\2}\u018c\3\2\2\2\177\u019a\3\2\2\2\u0081\u01c9\3\2\2\2\u0083"+
		"\u01cc\3\2\2\2\u0085\u01d4\3\2\2\2\u0087\u01de\3\2\2\2\u0089\u01e0\3\2"+
		"\2\2\u008b\u01e2\3\2\2\2\u008d\u008e\7*\2\2\u008e\4\3\2\2\2\u008f\u0090"+
		"\7.\2\2\u0090\6\3\2\2\2\u0091\u0092\7+\2\2\u0092\b\3\2\2\2\u0093\u0094"+
		"\7<\2\2\u0094\n\3\2\2\2\u0095\u0096\7/\2\2\u0096\u0097\7@\2\2\u0097\f"+
		"\3\2\2\2\u0098\u0099\7e\2\2\u0099\u009a\7n\2\2\u009a\u009b\7c\2\2\u009b"+
		"\u009c\7u\2\2\u009c\u009d\7u\2\2\u009d\16\3\2\2\2\u009e\u009f\7c\2\2\u009f"+
		"\u00a0\7t\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3\7{\2\2"+
		"\u00a3\20\3\2\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7\7"+
		"r\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7g\2\2\u00a9\22\3\2\2\2\u00aa\u00ab"+
		"\7n\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7u\2\2\u00ad\u00ae\7v\2\2\u00ae"+
		"\24\3\2\2\2\u00af\u00b0\7r\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7t\2\2\u00b2"+
		"\26\3\2\2\2\u00b3\u00b4\7d\2\2\u00b4\u00b5\7x\2\2\u00b5\30\3\2\2\2\u00b6"+
		"\u00b7\7h\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7t\2\2\u00b9\32\3\2\2\2\u00ba"+
		"\u00bb\7k\2\2\u00bb\u00bc\7p\2\2\u00bc\34\3\2\2\2\u00bd\u00be\7v\2\2\u00be"+
		"\u00bf\7t\2\2\u00bf\u00c0\7w\2\2\u00c0\u00c1\7g\2\2\u00c1\36\3\2\2\2\u00c2"+
		"\u00c3\7h\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7u\2\2"+
		"\u00c6\u00c7\7g\2\2\u00c7 \3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7o\2"+
		"\2\u00ca\u00cb\7r\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7{\2\2\u00cd\"\3"+
		"\2\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7k\2\2\u00d1"+
		"\u00d2\7p\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7t\2\2"+
		"\u00d5\u00d6\7r\2\2\u00d6$\3\2\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7w\2"+
		"\2\u00d9\u00da\7n\2\2\u00da\u00db\7n\2\2\u00db&\3\2\2\2\u00dc\u00dd\7"+
		"e\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7e\2\2\u00e0\u00e1"+
		"\7t\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4\7g\2\2\u00e4"+
		"(\3\2\2\2\u00e5\u00e6\7e\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8\7p\2\2\u00e8"+
		"\u00e9\7u\2\2\u00e9\u00ea\7v\2\2\u00ea*\3\2\2\2\u00eb\u00ec\7]\2\2\u00ec"+
		",\3\2\2\2\u00ed\u00ee\7_\2\2\u00ee.\3\2\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1"+
		"\7p\2\2\u00f1\u00f2\7e\2\2\u00f2\u00f3\7t\2\2\u00f3\60\3\2\2\2\u00f4\u00f5"+
		"\7f\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7\7e\2\2\u00f7\u00f8\7t\2\2\u00f8"+
		"\62\3\2\2\2\u00f9\u00fa\7\60\2\2\u00fa\64\3\2\2\2\u00fb\u00fc\7B\2\2\u00fc"+
		"\66\3\2\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7o\2\2\u00ff\u0100\7k\2\2\u0100"+
		"\u0101\7v\2\2\u01018\3\2\2\2\u0102\u0103\7k\2\2\u0103\u0104\7p\2\2\u0104"+
		"\u0105\7k\2\2\u0105\u0106\7v\2\2\u0106:\3\2\2\2\u0107\u0108\7u\2\2\u0108"+
		"\u0109\7e\2\2\u0109\u010a\7q\2\2\u010a\u010b\7r\2\2\u010b\u010c\7g\2\2"+
		"\u010c<\3\2\2\2\u010d\u010e\7n\2\2\u010e\u010f\7d\2\2\u010f>\3\2\2\2\u0110"+
		"\u0111\7w\2\2\u0111\u0112\7d\2\2\u0112@\3\2\2\2\u0113\u0114\7h\2\2\u0114"+
		"\u0115\7q\2\2\u0115\u0116\7t\2\2\u0116\u0117\7c\2\2\u0117\u0118\7n\2\2"+
		"\u0118\u0119\7n\2\2\u0119B\3\2\2\2\u011a\u011b\7k\2\2\u011b\u011c\7h\2"+
		"\2\u011cD\3\2\2\2\u011d\u011e\7v\2\2\u011e\u011f\7j\2\2\u011f\u0120\7"+
		"g\2\2\u0120\u0121\7p\2\2\u0121F\3\2\2\2\u0122\u0123\7g\2\2\u0123\u0124"+
		"\7n\2\2\u0124\u0125\7u\2\2\u0125\u0126\7g\2\2\u0126H\3\2\2\2\u0127\u0128"+
		"\7/\2\2\u0128\u0129\7/\2\2\u0129\u012a\7@\2\2\u012aJ\3\2\2\2\u012b\u012c"+
		"\7n\2\2\u012c\u012d\7g\2\2\u012d\u012e\7v\2\2\u012eL\3\2\2\2\u012f\u0130"+
		"\7c\2\2\u0130\u0131\7u\2\2\u0131\u0132\7u\2\2\u0132\u0133\7w\2\2\u0133"+
		"\u0134\7o\2\2\u0134\u0135\7g\2\2\u0135N\3\2\2\2\u0136\u0137\7\61\2\2\u0137"+
		"\u0138\7,\2\2\u0138\u013c\3\2\2\2\u0139\u013b\13\2\2\2\u013a\u0139\3\2"+
		"\2\2\u013b\u013e\3\2\2\2\u013c\u013d\3\2\2\2\u013c\u013a\3\2\2\2\u013d"+
		"\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0140\7,\2\2\u0140\u0141\7\61"+
		"\2\2\u0141\u0142\3\2\2\2\u0142\u0143\b(\2\2\u0143P\3\2\2\2\u0144\u0145"+
		"\7\61\2\2\u0145\u0146\7\61\2\2\u0146\u014a\3\2\2\2\u0147\u0149\n\2\2\2"+
		"\u0148\u0147\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148\3\2\2\2\u014a\u014b"+
		"\3\2\2\2\u014b\u014e\3\2\2\2\u014c\u014a\3\2\2\2\u014d\u014f\7\17\2\2"+
		"\u014e\u014d\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0151"+
		"\7\f\2\2\u0151\u0152\3\2\2\2\u0152\u0153\b)\2\2\u0153R\3\2\2\2\u0154\u0156"+
		"\t\3\2\2\u0155\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155\3\2\2\2\u0157"+
		"\u0158\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b*\3\2\u015aT\3\2\2\2\u015b"+
		"\u015c\7?\2\2\u015cV\3\2\2\2\u015d\u015e\7#\2\2\u015e\u015f\7?\2\2\u015f"+
		"X\3\2\2\2\u0160\u0161\7(\2\2\u0161\u0162\7(\2\2\u0162Z\3\2\2\2\u0163\u0164"+
		"\7~\2\2\u0164\u0165\7~\2\2\u0165\\\3\2\2\2\u0166\u0167\7#\2\2\u0167^\3"+
		"\2\2\2\u0168\u0169\7>\2\2\u0169`\3\2\2\2\u016a\u016b\7>\2\2\u016b\u016c"+
		"\7?\2\2\u016cb\3\2\2\2\u016d\u016e\7@\2\2\u016ed\3\2\2\2\u016f\u0170\7"+
		"@\2\2\u0170\u0171\7?\2\2\u0171f\3\2\2\2\u0172\u0173\7-\2\2\u0173h\3\2"+
		"\2\2\u0174\u0175\7/\2\2\u0175j\3\2\2\2\u0176\u0177\7,\2\2\u0177l\3\2\2"+
		"\2\u0178\u0179\7\61\2\2\u0179n\3\2\2\2\u017a\u017b\7\'\2\2\u017bp\3\2"+
		"\2\2\u017c\u017d\7>\2\2\u017d\u017e\7>\2\2\u017er\3\2\2\2\u017f\u0180"+
		"\7@\2\2\u0180\u0181\7@\2\2\u0181t\3\2\2\2\u0182\u0183\7@\2\2\u0183\u0184"+
		"\7@\2\2\u0184\u0185\7@\2\2\u0185v\3\2\2\2\u0186\u0187\7(\2\2\u0187x\3"+
		"\2\2\2\u0188\u0189\7~\2\2\u0189z\3\2\2\2\u018a\u018b\7`\2\2\u018b|\3\2"+
		"\2\2\u018c\u018d\7\u0080\2\2\u018d~\3\2\2\2\u018e\u018f\7k\2\2\u018f\u0190"+
		"\7p\2\2\u0190\u019b\7v\2\2\u0191\u0192\7d\2\2\u0192\u0193\7q\2\2\u0193"+
		"\u0194\7q\2\2\u0194\u019b\7n\2\2\u0195\u0196\7h\2\2\u0196\u0197\7n\2\2"+
		"\u0197\u0198\7q\2\2\u0198\u0199\7c\2\2\u0199\u019b\7v\2\2\u019a\u018e"+
		"\3\2\2\2\u019a\u0191\3\2\2\2\u019a\u0195\3\2\2\2\u019b\u0080\3\2\2\2\u019c"+
		"\u019d\7q\2\2\u019d\u019e\7w\2\2\u019e\u019f\7v\2\2\u019f\u01a0\7a\2\2"+
		"\u01a0\u01a1\7x\2\2\u01a1\u01a2\7c\2\2\u01a2\u01a3\7t\2\2\u01a3\u01ca"+
		"\7u\2\2\u01a4\u01a5\7q\2\2\u01a5\u01a6\7w\2\2\u01a6\u01a7\7v\2\2\u01a7"+
		"\u01a8\7a\2\2\u01a8\u01a9\7c\2\2\u01a9\u01aa\7t\2\2\u01aa\u01ab\7t\2\2"+
		"\u01ab\u01ac\7a\2\2\u01ac\u01ad\7x\2\2\u01ad\u01ae\7c\2\2\u01ae\u01af"+
		"\7t\2\2\u01af\u01ca\7u\2\2\u01b0\u01b1\7k\2\2\u01b1\u01b2\7p\2\2\u01b2"+
		"\u01b3\7a\2\2\u01b3\u01b4\7x\2\2\u01b4\u01b5\7c\2\2\u01b5\u01b6\7t\2\2"+
		"\u01b6\u01ca\7u\2\2\u01b7\u01b8\7k\2\2\u01b8\u01b9\7f\2\2\u01b9\u01ba"+
		"\7z\2\2\u01ba\u01bb\7a\2\2\u01bb\u01bc\7x\2\2\u01bc\u01bd\7c\2\2\u01bd"+
		"\u01be\7t\2\2\u01be\u01ca\7u\2\2\u01bf\u01c0\7x\2\2\u01c0\u01c1\7c\2\2"+
		"\u01c1\u01c2\7t\2\2\u01c2\u01ca\7u\2\2\u01c3\u01c4\7e\2\2\u01c4\u01c5"+
		"\7q\2\2\u01c5\u01c6\7p\2\2\u01c6\u01c7\7u\2\2\u01c7\u01c8\7v\2\2\u01c8"+
		"\u01ca\7u\2\2\u01c9\u019c\3\2\2\2\u01c9\u01a4\3\2\2\2\u01c9\u01b0\3\2"+
		"\2\2\u01c9\u01b7\3\2\2\2\u01c9\u01bf\3\2\2\2\u01c9\u01c3\3\2\2\2\u01ca"+
		"\u0082\3\2\2\2\u01cb\u01cd\t\4\2\2\u01cc\u01cb\3\2\2\2\u01cd\u01d1\3\2"+
		"\2\2\u01ce\u01d0\t\5\2\2\u01cf\u01ce\3\2\2\2\u01d0\u01d3\3\2\2\2\u01d1"+
		"\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2\u0084\3\2\2\2\u01d3\u01d1\3\2"+
		"\2\2\u01d4\u01d5\5\u0087D\2\u01d5\u0086\3\2\2\2\u01d6\u01df\7\62\2\2\u01d7"+
		"\u01db\4\63;\2\u01d8\u01da\4\62;\2\u01d9\u01d8\3\2\2\2\u01da\u01dd\3\2"+
		"\2\2\u01db\u01d9\3\2\2\2\u01db\u01dc\3\2\2\2\u01dc\u01df\3\2\2\2\u01dd"+
		"\u01db\3\2\2\2\u01de\u01d6\3\2\2\2\u01de\u01d7\3\2\2\2\u01df\u0088\3\2"+
		"\2\2\u01e0\u01e1\5\u008bF\2\u01e1\u008a\3\2\2\2\u01e2\u01e3\5\u0087D\2"+
		"\u01e3\u01e7\7\60\2\2\u01e4\u01e6\4\62;\2\u01e5\u01e4\3\2\2\2\u01e6\u01e9"+
		"\3\2\2\2\u01e7\u01e5\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u008c\3\2\2\2\u01e9"+
		"\u01e7\3\2\2\2\17\2\u013c\u014a\u014e\u0157\u019a\u01c9\u01cc\u01cf\u01d1"+
		"\u01db\u01de\u01e7\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}