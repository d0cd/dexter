// Generated from DexterIR.g4 by ANTLR 4.7.2

package dexter.ir.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DexterIRLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, COMMENT=41, LINE_COMMENT=42, WS=43, EQ=44, NEQ=45, 
		AND=46, OR=47, NOT=48, LT=49, LE=50, GT=51, GE=52, PLUS=53, MINUS=54, 
		MULT=55, DIV=56, MOD=57, SHL=58, LSHR=59, ASHR=60, BAND=61, BOR=62, BXOR=63, 
		BNOT=64, BASETYPE=65, MACRO=66, ID=67, NUMBER=68, FLOATNUM=69;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "COMMENT", 
			"LINE_COMMENT", "WS", "EQ", "NEQ", "AND", "OR", "NOT", "LT", "LE", "GT", 
			"GE", "PLUS", "MINUS", "MULT", "DIV", "MOD", "SHL", "LSHR", "ASHR", "BAND", 
			"BOR", "BXOR", "BNOT", "BASETYPE", "MACRO", "ID", "NUMBER", "INT", "FLOATNUM", 
			"FLOAT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "','", "')'", "':'", "'->'", "'generator'", "'class'", "'array'", 
			"'ptr'", "'buffer'", "'tuple'", "'list'", "'bv'", "'for'", "'in'", "'true'", 
			"'false'", "'empty'", "'uninterp'", "'null'", "'concrete'", "'const'", 
			"'['", "']'", "'incr'", "'decr'", "'.'", "'@'", "'emit'", "'init'", "'scope'", 
			"'lb'", "'ub'", "'forall'", "'if'", "'then'", "'else'", "'-->'", "'let'", 
			"'assume'", null, null, null, "'='", "'!='", "'&&'", "'||'", "'!'", "'<'", 
			"'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", "'<<'", "'>>'", 
			"'>>>'", "'&'", "'|'", "'^'", "'~'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, "COMMENT", "LINE_COMMENT", "WS", "EQ", 
			"NEQ", "AND", "OR", "NOT", "LT", "LE", "GT", "GE", "PLUS", "MINUS", "MULT", 
			"DIV", "MOD", "SHL", "LSHR", "ASHR", "BAND", "BOR", "BXOR", "BNOT", "BASETYPE", 
			"MACRO", "ID", "NUMBER", "FLOATNUM"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DexterIRLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DexterIR.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2G\u022a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2"+
		"\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3"+
		"\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3#"+
		"\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3"+
		"(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\7*\u0150\n*\f*\16*\u0153\13*\3*"+
		"\3*\3*\3*\3*\3+\3+\3+\3+\7+\u015e\n+\f+\16+\u0161\13+\3+\5+\u0164\n+\3"+
		"+\3+\3+\3+\3,\6,\u016b\n,\r,\16,\u016c\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3"+
		"\60\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3"+
		"\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3"+
		"=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3"+
		"B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3"+
		"B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\5B\u01db\nB\3C\3"+
		"C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3"+
		"C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\5C\u020a"+
		"\nC\3D\5D\u020d\nD\3D\7D\u0210\nD\fD\16D\u0213\13D\3E\3E\3F\3F\3F\7F\u021a"+
		"\nF\fF\16F\u021d\13F\5F\u021f\nF\3G\3G\3H\3H\3H\7H\u0226\nH\fH\16H\u0229"+
		"\13H\3\u0151\2I\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64"+
		"g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089"+
		"F\u008b\2\u008dG\u008f\2\3\2\6\4\2\f\f\17\17\5\2\13\f\17\17\"\"\5\2C\\"+
		"aac|\6\2\62;C\\aac|\2\u023c\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2"+
		"\2\2\u008d\3\2\2\2\3\u0091\3\2\2\2\5\u0093\3\2\2\2\7\u0095\3\2\2\2\t\u0097"+
		"\3\2\2\2\13\u0099\3\2\2\2\r\u009c\3\2\2\2\17\u00a6\3\2\2\2\21\u00ac\3"+
		"\2\2\2\23\u00b2\3\2\2\2\25\u00b6\3\2\2\2\27\u00bd\3\2\2\2\31\u00c3\3\2"+
		"\2\2\33\u00c8\3\2\2\2\35\u00cb\3\2\2\2\37\u00cf\3\2\2\2!\u00d2\3\2\2\2"+
		"#\u00d7\3\2\2\2%\u00dd\3\2\2\2\'\u00e3\3\2\2\2)\u00ec\3\2\2\2+\u00f1\3"+
		"\2\2\2-\u00fa\3\2\2\2/\u0100\3\2\2\2\61\u0102\3\2\2\2\63\u0104\3\2\2\2"+
		"\65\u0109\3\2\2\2\67\u010e\3\2\2\29\u0110\3\2\2\2;\u0112\3\2\2\2=\u0117"+
		"\3\2\2\2?\u011c\3\2\2\2A\u0122\3\2\2\2C\u0125\3\2\2\2E\u0128\3\2\2\2G"+
		"\u012f\3\2\2\2I\u0132\3\2\2\2K\u0137\3\2\2\2M\u013c\3\2\2\2O\u0140\3\2"+
		"\2\2Q\u0144\3\2\2\2S\u014b\3\2\2\2U\u0159\3\2\2\2W\u016a\3\2\2\2Y\u0170"+
		"\3\2\2\2[\u0172\3\2\2\2]\u0175\3\2\2\2_\u0178\3\2\2\2a\u017b\3\2\2\2c"+
		"\u017d\3\2\2\2e\u017f\3\2\2\2g\u0182\3\2\2\2i\u0184\3\2\2\2k\u0187\3\2"+
		"\2\2m\u0189\3\2\2\2o\u018b\3\2\2\2q\u018d\3\2\2\2s\u018f\3\2\2\2u\u0191"+
		"\3\2\2\2w\u0194\3\2\2\2y\u0197\3\2\2\2{\u019b\3\2\2\2}\u019d\3\2\2\2\177"+
		"\u019f\3\2\2\2\u0081\u01a1\3\2\2\2\u0083\u01da\3\2\2\2\u0085\u0209\3\2"+
		"\2\2\u0087\u020c\3\2\2\2\u0089\u0214\3\2\2\2\u008b\u021e\3\2\2\2\u008d"+
		"\u0220\3\2\2\2\u008f\u0222\3\2\2\2\u0091\u0092\7*\2\2\u0092\4\3\2\2\2"+
		"\u0093\u0094\7.\2\2\u0094\6\3\2\2\2\u0095\u0096\7+\2\2\u0096\b\3\2\2\2"+
		"\u0097\u0098\7<\2\2\u0098\n\3\2\2\2\u0099\u009a\7/\2\2\u009a\u009b\7@"+
		"\2\2\u009b\f\3\2\2\2\u009c\u009d\7i\2\2\u009d\u009e\7g\2\2\u009e\u009f"+
		"\7p\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2\7c\2\2\u00a2"+
		"\u00a3\7v\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7t\2\2\u00a5\16\3\2\2\2\u00a6"+
		"\u00a7\7e\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7u\2\2"+
		"\u00aa\u00ab\7u\2\2\u00ab\20\3\2\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7"+
		"t\2\2\u00ae\u00af\7t\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1\7{\2\2\u00b1\22"+
		"\3\2\2\2\u00b2\u00b3\7r\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5\7t\2\2\u00b5"+
		"\24\3\2\2\2\u00b6\u00b7\7d\2\2\u00b7\u00b8\7w\2\2\u00b8\u00b9\7h\2\2\u00b9"+
		"\u00ba\7h\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7t\2\2\u00bc\26\3\2\2\2\u00bd"+
		"\u00be\7v\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7r\2\2\u00c0\u00c1\7n\2\2"+
		"\u00c1\u00c2\7g\2\2\u00c2\30\3\2\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5\7"+
		"k\2\2\u00c5\u00c6\7u\2\2\u00c6\u00c7\7v\2\2\u00c7\32\3\2\2\2\u00c8\u00c9"+
		"\7d\2\2\u00c9\u00ca\7x\2\2\u00ca\34\3\2\2\2\u00cb\u00cc\7h\2\2\u00cc\u00cd"+
		"\7q\2\2\u00cd\u00ce\7t\2\2\u00ce\36\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1"+
		"\7p\2\2\u00d1 \3\2\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5"+
		"\7w\2\2\u00d5\u00d6\7g\2\2\u00d6\"\3\2\2\2\u00d7\u00d8\7h\2\2\u00d8\u00d9"+
		"\7c\2\2\u00d9\u00da\7n\2\2\u00da\u00db\7u\2\2\u00db\u00dc\7g\2\2\u00dc"+
		"$\3\2\2\2\u00dd\u00de\7g\2\2\u00de\u00df\7o\2\2\u00df\u00e0\7r\2\2\u00e0"+
		"\u00e1\7v\2\2\u00e1\u00e2\7{\2\2\u00e2&\3\2\2\2\u00e3\u00e4\7w\2\2\u00e4"+
		"\u00e5\7p\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8\7v\2\2"+
		"\u00e8\u00e9\7g\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7r\2\2\u00eb(\3\2\2"+
		"\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7w\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0"+
		"\7n\2\2\u00f0*\3\2\2\2\u00f1\u00f2\7e\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4"+
		"\7p\2\2\u00f4\u00f5\7e\2\2\u00f5\u00f6\7t\2\2\u00f6\u00f7\7g\2\2\u00f7"+
		"\u00f8\7v\2\2\u00f8\u00f9\7g\2\2\u00f9,\3\2\2\2\u00fa\u00fb\7e\2\2\u00fb"+
		"\u00fc\7q\2\2\u00fc\u00fd\7p\2\2\u00fd\u00fe\7u\2\2\u00fe\u00ff\7v\2\2"+
		"\u00ff.\3\2\2\2\u0100\u0101\7]\2\2\u0101\60\3\2\2\2\u0102\u0103\7_\2\2"+
		"\u0103\62\3\2\2\2\u0104\u0105\7k\2\2\u0105\u0106\7p\2\2\u0106\u0107\7"+
		"e\2\2\u0107\u0108\7t\2\2\u0108\64\3\2\2\2\u0109\u010a\7f\2\2\u010a\u010b"+
		"\7g\2\2\u010b\u010c\7e\2\2\u010c\u010d\7t\2\2\u010d\66\3\2\2\2\u010e\u010f"+
		"\7\60\2\2\u010f8\3\2\2\2\u0110\u0111\7B\2\2\u0111:\3\2\2\2\u0112\u0113"+
		"\7g\2\2\u0113\u0114\7o\2\2\u0114\u0115\7k\2\2\u0115\u0116\7v\2\2\u0116"+
		"<\3\2\2\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119\u011a\7k\2\2\u011a"+
		"\u011b\7v\2\2\u011b>\3\2\2\2\u011c\u011d\7u\2\2\u011d\u011e\7e\2\2\u011e"+
		"\u011f\7q\2\2\u011f\u0120\7r\2\2\u0120\u0121\7g\2\2\u0121@\3\2\2\2\u0122"+
		"\u0123\7n\2\2\u0123\u0124\7d\2\2\u0124B\3\2\2\2\u0125\u0126\7w\2\2\u0126"+
		"\u0127\7d\2\2\u0127D\3\2\2\2\u0128\u0129\7h\2\2\u0129\u012a\7q\2\2\u012a"+
		"\u012b\7t\2\2\u012b\u012c\7c\2\2\u012c\u012d\7n\2\2\u012d\u012e\7n\2\2"+
		"\u012eF\3\2\2\2\u012f\u0130\7k\2\2\u0130\u0131\7h\2\2\u0131H\3\2\2\2\u0132"+
		"\u0133\7v\2\2\u0133\u0134\7j\2\2\u0134\u0135\7g\2\2\u0135\u0136\7p\2\2"+
		"\u0136J\3\2\2\2\u0137\u0138\7g\2\2\u0138\u0139\7n\2\2\u0139\u013a\7u\2"+
		"\2\u013a\u013b\7g\2\2\u013bL\3\2\2\2\u013c\u013d\7/\2\2\u013d\u013e\7"+
		"/\2\2\u013e\u013f\7@\2\2\u013fN\3\2\2\2\u0140\u0141\7n\2\2\u0141\u0142"+
		"\7g\2\2\u0142\u0143\7v\2\2\u0143P\3\2\2\2\u0144\u0145\7c\2\2\u0145\u0146"+
		"\7u\2\2\u0146\u0147\7u\2\2\u0147\u0148\7w\2\2\u0148\u0149\7o\2\2\u0149"+
		"\u014a\7g\2\2\u014aR\3\2\2\2\u014b\u014c\7\61\2\2\u014c\u014d\7,\2\2\u014d"+
		"\u0151\3\2\2\2\u014e\u0150\13\2\2\2\u014f\u014e\3\2\2\2\u0150\u0153\3"+
		"\2\2\2\u0151\u0152\3\2\2\2\u0151\u014f\3\2\2\2\u0152\u0154\3\2\2\2\u0153"+
		"\u0151\3\2\2\2\u0154\u0155\7,\2\2\u0155\u0156\7\61\2\2\u0156\u0157\3\2"+
		"\2\2\u0157\u0158\b*\2\2\u0158T\3\2\2\2\u0159\u015a\7\61\2\2\u015a\u015b"+
		"\7\61\2\2\u015b\u015f\3\2\2\2\u015c\u015e\n\2\2\2\u015d\u015c\3\2\2\2"+
		"\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0163"+
		"\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u0164\7\17\2\2\u0163\u0162\3\2\2\2"+
		"\u0163\u0164\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0166\7\f\2\2\u0166\u0167"+
		"\3\2\2\2\u0167\u0168\b+\2\2\u0168V\3\2\2\2\u0169\u016b\t\3\2\2\u016a\u0169"+
		"\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d\3\2\2\2\u016d"+
		"\u016e\3\2\2\2\u016e\u016f\b,\3\2\u016fX\3\2\2\2\u0170\u0171\7?\2\2\u0171"+
		"Z\3\2\2\2\u0172\u0173\7#\2\2\u0173\u0174\7?\2\2\u0174\\\3\2\2\2\u0175"+
		"\u0176\7(\2\2\u0176\u0177\7(\2\2\u0177^\3\2\2\2\u0178\u0179\7~\2\2\u0179"+
		"\u017a\7~\2\2\u017a`\3\2\2\2\u017b\u017c\7#\2\2\u017cb\3\2\2\2\u017d\u017e"+
		"\7>\2\2\u017ed\3\2\2\2\u017f\u0180\7>\2\2\u0180\u0181\7?\2\2\u0181f\3"+
		"\2\2\2\u0182\u0183\7@\2\2\u0183h\3\2\2\2\u0184\u0185\7@\2\2\u0185\u0186"+
		"\7?\2\2\u0186j\3\2\2\2\u0187\u0188\7-\2\2\u0188l\3\2\2\2\u0189\u018a\7"+
		"/\2\2\u018an\3\2\2\2\u018b\u018c\7,\2\2\u018cp\3\2\2\2\u018d\u018e\7\61"+
		"\2\2\u018er\3\2\2\2\u018f\u0190\7\'\2\2\u0190t\3\2\2\2\u0191\u0192\7>"+
		"\2\2\u0192\u0193\7>\2\2\u0193v\3\2\2\2\u0194\u0195\7@\2\2\u0195\u0196"+
		"\7@\2\2\u0196x\3\2\2\2\u0197\u0198\7@\2\2\u0198\u0199\7@\2\2\u0199\u019a"+
		"\7@\2\2\u019az\3\2\2\2\u019b\u019c\7(\2\2\u019c|\3\2\2\2\u019d\u019e\7"+
		"~\2\2\u019e~\3\2\2\2\u019f\u01a0\7`\2\2\u01a0\u0080\3\2\2\2\u01a1\u01a2"+
		"\7\u0080\2\2\u01a2\u0082\3\2\2\2\u01a3\u01a4\7k\2\2\u01a4\u01a5\7p\2\2"+
		"\u01a5\u01a6\7v\2\2\u01a6\u01a7\7:\2\2\u01a7\u01a8\7a\2\2\u01a8\u01db"+
		"\7v\2\2\u01a9\u01aa\7k\2\2\u01aa\u01ab\7p\2\2\u01ab\u01ac\7v\2\2\u01ac"+
		"\u01ad\7\63\2\2\u01ad\u01ae\78\2\2\u01ae\u01af\7a\2\2\u01af\u01db\7v\2"+
		"\2\u01b0\u01b1\7k\2\2\u01b1\u01b2\7p\2\2\u01b2\u01b3\7v\2\2\u01b3\u01b4"+
		"\7\65\2\2\u01b4\u01b5\7\64\2\2\u01b5\u01b6\7a\2\2\u01b6\u01db\7v\2\2\u01b7"+
		"\u01b8\7w\2\2\u01b8\u01b9\7k\2\2\u01b9\u01ba\7p\2\2\u01ba\u01bb\7v\2\2"+
		"\u01bb\u01bc\7:\2\2\u01bc\u01bd\7a\2\2\u01bd\u01db\7v\2\2\u01be\u01bf"+
		"\7w\2\2\u01bf\u01c0\7k\2\2\u01c0\u01c1\7p\2\2\u01c1\u01c2\7v\2\2\u01c2"+
		"\u01c3\7\63\2\2\u01c3\u01c4\78\2\2\u01c4\u01c5\7a\2\2\u01c5\u01db\7v\2"+
		"\2\u01c6\u01c7\7w\2\2\u01c7\u01c8\7k\2\2\u01c8\u01c9\7p\2\2\u01c9\u01ca"+
		"\7v\2\2\u01ca\u01cb\7\65\2\2\u01cb\u01cc\7\64\2\2\u01cc\u01cd\7a\2\2\u01cd"+
		"\u01db\7v\2\2\u01ce\u01cf\7k\2\2\u01cf\u01d0\7p\2\2\u01d0\u01db\7v\2\2"+
		"\u01d1\u01d2\7d\2\2\u01d2\u01d3\7q\2\2\u01d3\u01d4\7q\2\2\u01d4\u01db"+
		"\7n\2\2\u01d5\u01d6\7h\2\2\u01d6\u01d7\7n\2\2\u01d7\u01d8\7q\2\2\u01d8"+
		"\u01d9\7c\2\2\u01d9\u01db\7v\2\2\u01da\u01a3\3\2\2\2\u01da\u01a9\3\2\2"+
		"\2\u01da\u01b0\3\2\2\2\u01da\u01b7\3\2\2\2\u01da\u01be\3\2\2\2\u01da\u01c6"+
		"\3\2\2\2\u01da\u01ce\3\2\2\2\u01da\u01d1\3\2\2\2\u01da\u01d5\3\2\2\2\u01db"+
		"\u0084\3\2\2\2\u01dc\u01dd\7q\2\2\u01dd\u01de\7w\2\2\u01de\u01df\7v\2"+
		"\2\u01df\u01e0\7a\2\2\u01e0\u01e1\7x\2\2\u01e1\u01e2\7c\2\2\u01e2\u01e3"+
		"\7t\2\2\u01e3\u020a\7u\2\2\u01e4\u01e5\7q\2\2\u01e5\u01e6\7w\2\2\u01e6"+
		"\u01e7\7v\2\2\u01e7\u01e8\7a\2\2\u01e8\u01e9\7c\2\2\u01e9\u01ea\7t\2\2"+
		"\u01ea\u01eb\7t\2\2\u01eb\u01ec\7a\2\2\u01ec\u01ed\7x\2\2\u01ed\u01ee"+
		"\7c\2\2\u01ee\u01ef\7t\2\2\u01ef\u020a\7u\2\2\u01f0\u01f1\7k\2\2\u01f1"+
		"\u01f2\7p\2\2\u01f2\u01f3\7a\2\2\u01f3\u01f4\7x\2\2\u01f4\u01f5\7c\2\2"+
		"\u01f5\u01f6\7t\2\2\u01f6\u020a\7u\2\2\u01f7\u01f8\7k\2\2\u01f8\u01f9"+
		"\7f\2\2\u01f9\u01fa\7z\2\2\u01fa\u01fb\7a\2\2\u01fb\u01fc\7x\2\2\u01fc"+
		"\u01fd\7c\2\2\u01fd\u01fe\7t\2\2\u01fe\u020a\7u\2\2\u01ff\u0200\7x\2\2"+
		"\u0200\u0201\7c\2\2\u0201\u0202\7t\2\2\u0202\u020a\7u\2\2\u0203\u0204"+
		"\7e\2\2\u0204\u0205\7q\2\2\u0205\u0206\7p\2\2\u0206\u0207\7u\2\2\u0207"+
		"\u0208\7v\2\2\u0208\u020a\7u\2\2\u0209\u01dc\3\2\2\2\u0209\u01e4\3\2\2"+
		"\2\u0209\u01f0\3\2\2\2\u0209\u01f7\3\2\2\2\u0209\u01ff\3\2\2\2\u0209\u0203"+
		"\3\2\2\2\u020a\u0086\3\2\2\2\u020b\u020d\t\4\2\2\u020c\u020b\3\2\2\2\u020d"+
		"\u0211\3\2\2\2\u020e\u0210\t\5\2\2\u020f\u020e\3\2\2\2\u0210\u0213\3\2"+
		"\2\2\u0211\u020f\3\2\2\2\u0211\u0212\3\2\2\2\u0212\u0088\3\2\2\2\u0213"+
		"\u0211\3\2\2\2\u0214\u0215\5\u008bF\2\u0215\u008a\3\2\2\2\u0216\u021f"+
		"\7\62\2\2\u0217\u021b\4\63;\2\u0218\u021a\4\62;\2\u0219\u0218\3\2\2\2"+
		"\u021a\u021d\3\2\2\2\u021b\u0219\3\2\2\2\u021b\u021c\3\2\2\2\u021c\u021f"+
		"\3\2\2\2\u021d\u021b\3\2\2\2\u021e\u0216\3\2\2\2\u021e\u0217\3\2\2\2\u021f"+
		"\u008c\3\2\2\2\u0220\u0221\5\u008fH\2\u0221\u008e\3\2\2\2\u0222\u0223"+
		"\5\u008bF\2\u0223\u0227\7\60\2\2\u0224\u0226\4\62;\2\u0225\u0224\3\2\2"+
		"\2\u0226\u0229\3\2\2\2\u0227\u0225\3\2\2\2\u0227\u0228\3\2\2\2\u0228\u0090"+
		"\3\2\2\2\u0229\u0227\3\2\2\2\17\2\u0151\u015f\u0163\u016c\u01da\u0209"+
		"\u020c\u020f\u0211\u021b\u021e\u0227\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}