// Generated from DexterIR.g4 by ANTLR 4.7.2

package dexter.ir.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DexterIRLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, COMMENT=40, LINE_COMMENT=41, WS=42, EQ=43, NEQ=44, AND=45, OR=46, 
		NOT=47, LT=48, LE=49, GT=50, GE=51, PLUS=52, MINUS=53, MULT=54, DIV=55, 
		MOD=56, SHL=57, LSHR=58, ASHR=59, BAND=60, BOR=61, BXOR=62, BNOT=63, BASETYPE=64, 
		MACRO=65, ID=66, NUMBER=67, FLOATNUM=68;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "COMMENT", "LINE_COMMENT", 
			"WS", "EQ", "NEQ", "AND", "OR", "NOT", "LT", "LE", "GT", "GE", "PLUS", 
			"MINUS", "MULT", "DIV", "MOD", "SHL", "LSHR", "ASHR", "BAND", "BOR", 
			"BXOR", "BNOT", "BASETYPE", "MACRO", "ID", "NUMBER", "INT", "FLOATNUM", 
			"FLOAT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "','", "')'", "':'", "'->'", "'class'", "'array'", "'ptr'", 
			"'buffer'", "'tuple'", "'list'", "'bv'", "'for'", "'in'", "'true'", "'false'", 
			"'empty'", "'uninterp'", "'null'", "'concrete'", "'const'", "'['", "']'", 
			"'incr'", "'decr'", "'.'", "'@'", "'emit'", "'init'", "'scope'", "'lb'", 
			"'ub'", "'forall'", "'if'", "'then'", "'else'", "'-->'", "'let'", "'assume'", 
			null, null, null, "'='", "'!='", "'&&'", "'||'", "'!'", "'<'", "'<='", 
			"'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'>>>'", 
			"'&'", "'|'", "'^'", "'~'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, "COMMENT", "LINE_COMMENT", "WS", "EQ", "NEQ", 
			"AND", "OR", "NOT", "LT", "LE", "GT", "GE", "PLUS", "MINUS", "MULT", 
			"DIV", "MOD", "SHL", "LSHR", "ASHR", "BAND", "BOR", "BXOR", "BNOT", "BASETYPE", 
			"MACRO", "ID", "NUMBER", "FLOATNUM"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DexterIRLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DexterIR.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2F\u021e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\3\2\3\2\3"+
		"\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b"+
		"\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3%\3"+
		"%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3"+
		")\7)\u0144\n)\f)\16)\u0147\13)\3)\3)\3)\3)\3)\3*\3*\3*\3*\7*\u0152\n*"+
		"\f*\16*\u0155\13*\3*\5*\u0158\n*\3*\3*\3*\3*\3+\6+\u015f\n+\r+\16+\u0160"+
		"\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62"+
		"\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39"+
		"\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3A\3A"+
		"\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A"+
		"\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A"+
		"\3A\3A\3A\3A\3A\5A\u01cf\nA\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B"+
		"\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B"+
		"\3B\3B\3B\3B\3B\3B\3B\3B\5B\u01fe\nB\3C\5C\u0201\nC\3C\7C\u0204\nC\fC"+
		"\16C\u0207\13C\3D\3D\3E\3E\3E\7E\u020e\nE\fE\16E\u0211\13E\5E\u0213\n"+
		"E\3F\3F\3G\3G\3G\7G\u021a\nG\fG\16G\u021d\13G\3\u0145\2H\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{"+
		"?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089\2\u008bF\u008d\2\3\2\6\4\2"+
		"\f\f\17\17\5\2\13\f\17\17\"\"\5\2C\\aac|\6\2\62;C\\aac|\2\u0230\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o"+
		"\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2"+
		"\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u008b\3\2\2\2\3\u008f\3\2\2\2\5\u0091\3\2\2"+
		"\2\7\u0093\3\2\2\2\t\u0095\3\2\2\2\13\u0097\3\2\2\2\r\u009a\3\2\2\2\17"+
		"\u00a0\3\2\2\2\21\u00a6\3\2\2\2\23\u00aa\3\2\2\2\25\u00b1\3\2\2\2\27\u00b7"+
		"\3\2\2\2\31\u00bc\3\2\2\2\33\u00bf\3\2\2\2\35\u00c3\3\2\2\2\37\u00c6\3"+
		"\2\2\2!\u00cb\3\2\2\2#\u00d1\3\2\2\2%\u00d7\3\2\2\2\'\u00e0\3\2\2\2)\u00e5"+
		"\3\2\2\2+\u00ee\3\2\2\2-\u00f4\3\2\2\2/\u00f6\3\2\2\2\61\u00f8\3\2\2\2"+
		"\63\u00fd\3\2\2\2\65\u0102\3\2\2\2\67\u0104\3\2\2\29\u0106\3\2\2\2;\u010b"+
		"\3\2\2\2=\u0110\3\2\2\2?\u0116\3\2\2\2A\u0119\3\2\2\2C\u011c\3\2\2\2E"+
		"\u0123\3\2\2\2G\u0126\3\2\2\2I\u012b\3\2\2\2K\u0130\3\2\2\2M\u0134\3\2"+
		"\2\2O\u0138\3\2\2\2Q\u013f\3\2\2\2S\u014d\3\2\2\2U\u015e\3\2\2\2W\u0164"+
		"\3\2\2\2Y\u0166\3\2\2\2[\u0169\3\2\2\2]\u016c\3\2\2\2_\u016f\3\2\2\2a"+
		"\u0171\3\2\2\2c\u0173\3\2\2\2e\u0176\3\2\2\2g\u0178\3\2\2\2i\u017b\3\2"+
		"\2\2k\u017d\3\2\2\2m\u017f\3\2\2\2o\u0181\3\2\2\2q\u0183\3\2\2\2s\u0185"+
		"\3\2\2\2u\u0188\3\2\2\2w\u018b\3\2\2\2y\u018f\3\2\2\2{\u0191\3\2\2\2}"+
		"\u0193\3\2\2\2\177\u0195\3\2\2\2\u0081\u01ce\3\2\2\2\u0083\u01fd\3\2\2"+
		"\2\u0085\u0200\3\2\2\2\u0087\u0208\3\2\2\2\u0089\u0212\3\2\2\2\u008b\u0214"+
		"\3\2\2\2\u008d\u0216\3\2\2\2\u008f\u0090\7*\2\2\u0090\4\3\2\2\2\u0091"+
		"\u0092\7.\2\2\u0092\6\3\2\2\2\u0093\u0094\7+\2\2\u0094\b\3\2\2\2\u0095"+
		"\u0096\7<\2\2\u0096\n\3\2\2\2\u0097\u0098\7/\2\2\u0098\u0099\7@\2\2\u0099"+
		"\f\3\2\2\2\u009a\u009b\7e\2\2\u009b\u009c\7n\2\2\u009c\u009d\7c\2\2\u009d"+
		"\u009e\7u\2\2\u009e\u009f\7u\2\2\u009f\16\3\2\2\2\u00a0\u00a1\7c\2\2\u00a1"+
		"\u00a2\7t\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7c\2\2\u00a4\u00a5\7{\2\2"+
		"\u00a5\20\3\2\2\2\u00a6\u00a7\7r\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9\7"+
		"t\2\2\u00a9\22\3\2\2\2\u00aa\u00ab\7d\2\2\u00ab\u00ac\7w\2\2\u00ac\u00ad"+
		"\7h\2\2\u00ad\u00ae\7h\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7t\2\2\u00b0"+
		"\24\3\2\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4\7r\2\2\u00b4"+
		"\u00b5\7n\2\2\u00b5\u00b6\7g\2\2\u00b6\26\3\2\2\2\u00b7\u00b8\7n\2\2\u00b8"+
		"\u00b9\7k\2\2\u00b9\u00ba\7u\2\2\u00ba\u00bb\7v\2\2\u00bb\30\3\2\2\2\u00bc"+
		"\u00bd\7d\2\2\u00bd\u00be\7x\2\2\u00be\32\3\2\2\2\u00bf\u00c0\7h\2\2\u00c0"+
		"\u00c1\7q\2\2\u00c1\u00c2\7t\2\2\u00c2\34\3\2\2\2\u00c3\u00c4\7k\2\2\u00c4"+
		"\u00c5\7p\2\2\u00c5\36\3\2\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7t\2\2\u00c8"+
		"\u00c9\7w\2\2\u00c9\u00ca\7g\2\2\u00ca \3\2\2\2\u00cb\u00cc\7h\2\2\u00cc"+
		"\u00cd\7c\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7u\2\2\u00cf\u00d0\7g\2\2"+
		"\u00d0\"\3\2\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4\7r"+
		"\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6\7{\2\2\u00d6$\3\2\2\2\u00d7\u00d8"+
		"\7w\2\2\u00d8\u00d9\7p\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7p\2\2\u00db"+
		"\u00dc\7v\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7r\2\2"+
		"\u00df&\3\2\2\2\u00e0\u00e1\7p\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7n\2"+
		"\2\u00e3\u00e4\7n\2\2\u00e4(\3\2\2\2\u00e5\u00e6\7e\2\2\u00e6\u00e7\7"+
		"q\2\2\u00e7\u00e8\7p\2\2\u00e8\u00e9\7e\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb"+
		"\7g\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7g\2\2\u00ed*\3\2\2\2\u00ee\u00ef"+
		"\7e\2\2\u00ef\u00f0\7q\2\2\u00f0\u00f1\7p\2\2\u00f1\u00f2\7u\2\2\u00f2"+
		"\u00f3\7v\2\2\u00f3,\3\2\2\2\u00f4\u00f5\7]\2\2\u00f5.\3\2\2\2\u00f6\u00f7"+
		"\7_\2\2\u00f7\60\3\2\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7p\2\2\u00fa\u00fb"+
		"\7e\2\2\u00fb\u00fc\7t\2\2\u00fc\62\3\2\2\2\u00fd\u00fe\7f\2\2\u00fe\u00ff"+
		"\7g\2\2\u00ff\u0100\7e\2\2\u0100\u0101\7t\2\2\u0101\64\3\2\2\2\u0102\u0103"+
		"\7\60\2\2\u0103\66\3\2\2\2\u0104\u0105\7B\2\2\u01058\3\2\2\2\u0106\u0107"+
		"\7g\2\2\u0107\u0108\7o\2\2\u0108\u0109\7k\2\2\u0109\u010a\7v\2\2\u010a"+
		":\3\2\2\2\u010b\u010c\7k\2\2\u010c\u010d\7p\2\2\u010d\u010e\7k\2\2\u010e"+
		"\u010f\7v\2\2\u010f<\3\2\2\2\u0110\u0111\7u\2\2\u0111\u0112\7e\2\2\u0112"+
		"\u0113\7q\2\2\u0113\u0114\7r\2\2\u0114\u0115\7g\2\2\u0115>\3\2\2\2\u0116"+
		"\u0117\7n\2\2\u0117\u0118\7d\2\2\u0118@\3\2\2\2\u0119\u011a\7w\2\2\u011a"+
		"\u011b\7d\2\2\u011bB\3\2\2\2\u011c\u011d\7h\2\2\u011d\u011e\7q\2\2\u011e"+
		"\u011f\7t\2\2\u011f\u0120\7c\2\2\u0120\u0121\7n\2\2\u0121\u0122\7n\2\2"+
		"\u0122D\3\2\2\2\u0123\u0124\7k\2\2\u0124\u0125\7h\2\2\u0125F\3\2\2\2\u0126"+
		"\u0127\7v\2\2\u0127\u0128\7j\2\2\u0128\u0129\7g\2\2\u0129\u012a\7p\2\2"+
		"\u012aH\3\2\2\2\u012b\u012c\7g\2\2\u012c\u012d\7n\2\2\u012d\u012e\7u\2"+
		"\2\u012e\u012f\7g\2\2\u012fJ\3\2\2\2\u0130\u0131\7/\2\2\u0131\u0132\7"+
		"/\2\2\u0132\u0133\7@\2\2\u0133L\3\2\2\2\u0134\u0135\7n\2\2\u0135\u0136"+
		"\7g\2\2\u0136\u0137\7v\2\2\u0137N\3\2\2\2\u0138\u0139\7c\2\2\u0139\u013a"+
		"\7u\2\2\u013a\u013b\7u\2\2\u013b\u013c\7w\2\2\u013c\u013d\7o\2\2\u013d"+
		"\u013e\7g\2\2\u013eP\3\2\2\2\u013f\u0140\7\61\2\2\u0140\u0141\7,\2\2\u0141"+
		"\u0145\3\2\2\2\u0142\u0144\13\2\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3"+
		"\2\2\2\u0145\u0146\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0148\3\2\2\2\u0147"+
		"\u0145\3\2\2\2\u0148\u0149\7,\2\2\u0149\u014a\7\61\2\2\u014a\u014b\3\2"+
		"\2\2\u014b\u014c\b)\2\2\u014cR\3\2\2\2\u014d\u014e\7\61\2\2\u014e\u014f"+
		"\7\61\2\2\u014f\u0153\3\2\2\2\u0150\u0152\n\2\2\2\u0151\u0150\3\2\2\2"+
		"\u0152\u0155\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0157"+
		"\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0158\7\17\2\2\u0157\u0156\3\2\2\2"+
		"\u0157\u0158\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015a\7\f\2\2\u015a\u015b"+
		"\3\2\2\2\u015b\u015c\b*\2\2\u015cT\3\2\2\2\u015d\u015f\t\3\2\2\u015e\u015d"+
		"\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161"+
		"\u0162\3\2\2\2\u0162\u0163\b+\3\2\u0163V\3\2\2\2\u0164\u0165\7?\2\2\u0165"+
		"X\3\2\2\2\u0166\u0167\7#\2\2\u0167\u0168\7?\2\2\u0168Z\3\2\2\2\u0169\u016a"+
		"\7(\2\2\u016a\u016b\7(\2\2\u016b\\\3\2\2\2\u016c\u016d\7~\2\2\u016d\u016e"+
		"\7~\2\2\u016e^\3\2\2\2\u016f\u0170\7#\2\2\u0170`\3\2\2\2\u0171\u0172\7"+
		">\2\2\u0172b\3\2\2\2\u0173\u0174\7>\2\2\u0174\u0175\7?\2\2\u0175d\3\2"+
		"\2\2\u0176\u0177\7@\2\2\u0177f\3\2\2\2\u0178\u0179\7@\2\2\u0179\u017a"+
		"\7?\2\2\u017ah\3\2\2\2\u017b\u017c\7-\2\2\u017cj\3\2\2\2\u017d\u017e\7"+
		"/\2\2\u017el\3\2\2\2\u017f\u0180\7,\2\2\u0180n\3\2\2\2\u0181\u0182\7\61"+
		"\2\2\u0182p\3\2\2\2\u0183\u0184\7\'\2\2\u0184r\3\2\2\2\u0185\u0186\7>"+
		"\2\2\u0186\u0187\7>\2\2\u0187t\3\2\2\2\u0188\u0189\7@\2\2\u0189\u018a"+
		"\7@\2\2\u018av\3\2\2\2\u018b\u018c\7@\2\2\u018c\u018d\7@\2\2\u018d\u018e"+
		"\7@\2\2\u018ex\3\2\2\2\u018f\u0190\7(\2\2\u0190z\3\2\2\2\u0191\u0192\7"+
		"~\2\2\u0192|\3\2\2\2\u0193\u0194\7`\2\2\u0194~\3\2\2\2\u0195\u0196\7\u0080"+
		"\2\2\u0196\u0080\3\2\2\2\u0197\u0198\7k\2\2\u0198\u0199\7p\2\2\u0199\u019a"+
		"\7v\2\2\u019a\u019b\7:\2\2\u019b\u019c\7a\2\2\u019c\u01cf\7v\2\2\u019d"+
		"\u019e\7k\2\2\u019e\u019f\7p\2\2\u019f\u01a0\7v\2\2\u01a0\u01a1\7\63\2"+
		"\2\u01a1\u01a2\78\2\2\u01a2\u01a3\7a\2\2\u01a3\u01cf\7v\2\2\u01a4\u01a5"+
		"\7k\2\2\u01a5\u01a6\7p\2\2\u01a6\u01a7\7v\2\2\u01a7\u01a8\7\65\2\2\u01a8"+
		"\u01a9\7\64\2\2\u01a9\u01aa\7a\2\2\u01aa\u01cf\7v\2\2\u01ab\u01ac\7w\2"+
		"\2\u01ac\u01ad\7k\2\2\u01ad\u01ae\7p\2\2\u01ae\u01af\7v\2\2\u01af\u01b0"+
		"\7:\2\2\u01b0\u01b1\7a\2\2\u01b1\u01cf\7v\2\2\u01b2\u01b3\7w\2\2\u01b3"+
		"\u01b4\7k\2\2\u01b4\u01b5\7p\2\2\u01b5\u01b6\7v\2\2\u01b6\u01b7\7\63\2"+
		"\2\u01b7\u01b8\78\2\2\u01b8\u01b9\7a\2\2\u01b9\u01cf\7v\2\2\u01ba\u01bb"+
		"\7w\2\2\u01bb\u01bc\7k\2\2\u01bc\u01bd\7p\2\2\u01bd\u01be\7v\2\2\u01be"+
		"\u01bf\7\65\2\2\u01bf\u01c0\7\64\2\2\u01c0\u01c1\7a\2\2\u01c1\u01cf\7"+
		"v\2\2\u01c2\u01c3\7k\2\2\u01c3\u01c4\7p\2\2\u01c4\u01cf\7v\2\2\u01c5\u01c6"+
		"\7d\2\2\u01c6\u01c7\7q\2\2\u01c7\u01c8\7q\2\2\u01c8\u01cf\7n\2\2\u01c9"+
		"\u01ca\7h\2\2\u01ca\u01cb\7n\2\2\u01cb\u01cc\7q\2\2\u01cc\u01cd\7c\2\2"+
		"\u01cd\u01cf\7v\2\2\u01ce\u0197\3\2\2\2\u01ce\u019d\3\2\2\2\u01ce\u01a4"+
		"\3\2\2\2\u01ce\u01ab\3\2\2\2\u01ce\u01b2\3\2\2\2\u01ce\u01ba\3\2\2\2\u01ce"+
		"\u01c2\3\2\2\2\u01ce\u01c5\3\2\2\2\u01ce\u01c9\3\2\2\2\u01cf\u0082\3\2"+
		"\2\2\u01d0\u01d1\7q\2\2\u01d1\u01d2\7w\2\2\u01d2\u01d3\7v\2\2\u01d3\u01d4"+
		"\7a\2\2\u01d4\u01d5\7x\2\2\u01d5\u01d6\7c\2\2\u01d6\u01d7\7t\2\2\u01d7"+
		"\u01fe\7u\2\2\u01d8\u01d9\7q\2\2\u01d9\u01da\7w\2\2\u01da\u01db\7v\2\2"+
		"\u01db\u01dc\7a\2\2\u01dc\u01dd\7c\2\2\u01dd\u01de\7t\2\2\u01de\u01df"+
		"\7t\2\2\u01df\u01e0\7a\2\2\u01e0\u01e1\7x\2\2\u01e1\u01e2\7c\2\2\u01e2"+
		"\u01e3\7t\2\2\u01e3\u01fe\7u\2\2\u01e4\u01e5\7k\2\2\u01e5\u01e6\7p\2\2"+
		"\u01e6\u01e7\7a\2\2\u01e7\u01e8\7x\2\2\u01e8\u01e9\7c\2\2\u01e9\u01ea"+
		"\7t\2\2\u01ea\u01fe\7u\2\2\u01eb\u01ec\7k\2\2\u01ec\u01ed\7f\2\2\u01ed"+
		"\u01ee\7z\2\2\u01ee\u01ef\7a\2\2\u01ef\u01f0\7x\2\2\u01f0\u01f1\7c\2\2"+
		"\u01f1\u01f2\7t\2\2\u01f2\u01fe\7u\2\2\u01f3\u01f4\7x\2\2\u01f4\u01f5"+
		"\7c\2\2\u01f5\u01f6\7t\2\2\u01f6\u01fe\7u\2\2\u01f7\u01f8\7e\2\2\u01f8"+
		"\u01f9\7q\2\2\u01f9\u01fa\7p\2\2\u01fa\u01fb\7u\2\2\u01fb\u01fc\7v\2\2"+
		"\u01fc\u01fe\7u\2\2\u01fd\u01d0\3\2\2\2\u01fd\u01d8\3\2\2\2\u01fd\u01e4"+
		"\3\2\2\2\u01fd\u01eb\3\2\2\2\u01fd\u01f3\3\2\2\2\u01fd\u01f7\3\2\2\2\u01fe"+
		"\u0084\3\2\2\2\u01ff\u0201\t\4\2\2\u0200\u01ff\3\2\2\2\u0201\u0205\3\2"+
		"\2\2\u0202\u0204\t\5\2\2\u0203\u0202\3\2\2\2\u0204\u0207\3\2\2\2\u0205"+
		"\u0203\3\2\2\2\u0205\u0206\3\2\2\2\u0206\u0086\3\2\2\2\u0207\u0205\3\2"+
		"\2\2\u0208\u0209\5\u0089E\2\u0209\u0088\3\2\2\2\u020a\u0213\7\62\2\2\u020b"+
		"\u020f\4\63;\2\u020c\u020e\4\62;\2\u020d\u020c\3\2\2\2\u020e\u0211\3\2"+
		"\2\2\u020f\u020d\3\2\2\2\u020f\u0210\3\2\2\2\u0210\u0213\3\2\2\2\u0211"+
		"\u020f\3\2\2\2\u0212\u020a\3\2\2\2\u0212\u020b\3\2\2\2\u0213\u008a\3\2"+
		"\2\2\u0214\u0215\5\u008dG\2\u0215\u008c\3\2\2\2\u0216\u0217\5\u0089E\2"+
		"\u0217\u021b\7\60\2\2\u0218\u021a\4\62;\2\u0219\u0218\3\2\2\2\u021a\u021d"+
		"\3\2\2\2\u021b\u0219\3\2\2\2\u021b\u021c\3\2\2\2\u021c\u008e\3\2\2\2\u021d"+
		"\u021b\3\2\2\2\17\2\u0145\u0153\u0157\u0160\u01ce\u01fd\u0200\u0203\u0205"+
		"\u020f\u0212\u021b\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}